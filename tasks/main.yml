---

- name: Update repositories cache
  apt:
    update_cache: yes
    cache_valid_time: 28800
  when: ansible_os_family == 'Debian'

- name: Installed package
  ansible.builtin.package:
    name:
    - git
    - rsync
    - pigz
    state: latest

- name: Install from github
  ansible.builtin.git:
    repo: https://github.com/Rupreht/silver-parakeet.git
    dest: /usr/src/silver-parakeet
    version: 'master'
  tags: over_nat

# Add users
- name: Add groups
  ansible.builtin.group:
    name: '{{ item.name }}'
    gid: '{{ item.gid }}'
    state: present
  with_items:
  - { name: backup, gid: 34 }
  - { name: backuppc, gid: 10000 }

- name: Add user
  ansible.builtin.user:
    name:     backuppc
    comment:  'system user'
    expires:  -1
    home:     '{{ backuppc_homedir }}'
    shell:    /bin/sh
    uid:      '10000'
    group:    '10000'
    create_home: yes
    groups:
    - disk
    - backup

# ~/.ssh/authorized_keys
- name: Set authorized key taken from file
  authorized_key:
    user: backuppc
    state: present
    key: "{{ lookup('file', '{{playbook_dir}}/public_keys/backuppc.pub') }}"

- name: Sudoers Linux | update sudoers file and validate
  lineinfile:
    dest: /etc/sudoers
    line: 'backuppc ALL=(ALL) NOPASSWD: /usr/bin/rsync'
    regexp: '^backuppc .*'
    validate: 'visudo -cf %s'

- name: Fix dirs
  ansible.builtin.file:
    path:  '{{ item.path }}'
    mode:  '{{ item.mode }}'
    owner: "{{ item.owner | default('backuppc') }}"
    group: "{{ item.group | default('backuppc') }}"
    state: directory
  with_items:
  - { path: '{{ backuppc_homedir }}', mode: '0700' }
  - { path: '{{ backuppc_homedir }}/.config', mode: '0750' }
  - { path: '{{ backuppc_backup_dir }}', mode: '0700' }
  - { path: '{{ backuppc_backup_dir }}/mysql', mode: '0700' }

- name: Create a symbolic link
  ansible.builtin.file:
    src:   '{{ item.src }}'
    dest:  '{{ item.dest }}'
    state: link
  with_items:
  - { src: '/usr/src/silver-parakeet/dumpdb.sh', dest: '/usr/local/bin/dumpdb.sh' }

- name: Add files
  copy:
    src:   '{{ item.src }}'
    dest:  '{{ item.dest }}'
    mode:  '{{ item.mode  | default(omit) }}'
    owner: '{{ item.owner | default(omit) }}'
    group: '{{ item.group | default(omit) }}'
  with_items:
  - { src: ../files/dumpdb.sh.config, dest: "{{ backuppc_homedir }}/.config/dumpdb.sh.config" }

- name: Setup .my.cnf
  ini_file:
    path:    "{{ backuppc_homedir }}/.my.cnf"
    section: "{{ item.section }}"
    option:  "{{ item.option }}"
    value:   "{{ item.value }}"
    no_extra_spaces: yes
  with_items:
  - { section: "client", option: "user",     value: 'root' }
  - { section: "client", option: "host",     value: 'localhost' }
  - { section: "client", option: "password", value: '{{ mariadb_root_password }}' }
  when:
  - mariadb_version is defined
  ignore_errors: yes

- name: Create a file
  ansible.builtin.file:
    path: "{{ backuppc_backup_dir }}/mysql/.keep"
    state: touch
    mode: '0644'
    modification_time: preserve
    access_time: preserve

# MYSQL_DUMP_SKIP_DATABASES="${DBDUMP_HOME_FOLDER}/dumpdb_excluded_databases.txt"
# MYSQL_DUMP_SKIP_TABLES="${DBDUMP_HOME_FOLDER}/dumpdb_excluded_tables"
# MYSQL_DUMP_BIG_TABLES="${DBDUMP_HOME_FOLDER}/dumpdb_big_tables"
# mysqldump --ignore-table

# /{{ backuppc_backup_dir }}/dumpdb_big_tables.rt.txt

- name: Clean Dumpdb Excluded
  ansible.builtin.shell: "rm -f {{ backuppc_backup_dir }}/dumpdb_excluded_*"
  args:
    warn: no

# /{{ backuppc_backup_dir }}/dumpdb_excluded_tables.status.txt
- name: Excluded Databases
  template:
    src: "excluded_databases.j2"
    dest: "{{ backuppc_backup_dir }}/dumpdb_excluded_databases.txt"
    owner: backuppc
    group: backuppc
    mode: 0644
  when: backuppc_exclude_mysql.db is defined

# /{{ backuppc_backup_dir }}/dumpdb_excluded_tables.status.txt
- name: Excluded Tables
  template:
    src: "excluded_tables.j2"
    dest: "{{ backuppc_backup_dir }}/dumpdb_excluded_tables.{{ item }}.txt"
    owner: backuppc
    group: backuppc
    mode: 0644
  loop: "{{ backuppc_exclude_mysql.table|list }}"
  when: backuppc_exclude_mysql.table is defined
